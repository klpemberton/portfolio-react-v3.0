{"version":3,"file":"static/webpack/static/development/pages/_app.js.84d7e196874abf6c037d.hot-update.js","sources":["webpack:///./src/components/SiteNavigationItem/SiteNavigationItem.js","webpack:///./src/styles/theme.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeContext, css, keyframes } from 'styled-components';\nimport {\n\tFaBriefcase,\n\tFaEnvelope,\n\tFaExclamationCircle,\n\tFaHome,\n\tFaUser\n} from 'react-icons/fa';\nimport { NavData } from './navData';\nimport Link from 'next/link';\nimport { desktop, mobile, useBreakpoint } from '../../styles/theme';\n\nconst navSlideDesktop = keyframes`\n  from { left: 0%; }\n\tto {\n\t\tleft:  ${(props) => props.position};\n\t\ttransform: translateX(0%);\n\t}\n`;\n\nconst NavListItem = styled.li`\n\tposition: absolute;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tz-index: 11;\n\tbackground: ${(props) => props.backgroundColor};\n\n\t${desktop`\n    ${(props) => props.position && `left: ${props.position};`}\n    height: 100%;\n    width: 4%;\n  \n    ${(props) =>\n\t\tprops.isActive &&\n\t\tcss`\n\t\t\tanimation: ${navSlideDesktop} 0.4s linear;\n\t\t`};\n  `}\n\n\t${mobile`\n    ${(props) => props.position && `top: ${props.position};`}\n    left: 0;\n    width: 100%;\n    height: 6%;\n  `}\n`;\n\nconst NavLink = styled.a`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\theight: 100%;\n\tcolor: white;\n`;\n\nconst getPosition = (linkRoute, activeRoute, mobile) => {\n\tconst linkRouteName = linkRoute === '_error' ? 'error' : linkRoute;\n\tconst activeRouteName = activeRoute === '_error' ? 'error' : activeRoute;\n\tconst screenSize = mobile ? 'mobile' : 'desktop';\n\n\tif (linkRouteName === 'error' && activeRouteName === 'error') {\n\t\treturn mobile ? '0' : '96%';\n\t}\n\n\tif (linkRouteName === 'error' && activeRouteName !== 'error') {\n\t\treturn null;\n\t}\n\n\tif (linkRouteName === activeRouteName) {\n\t\treturn mobile ? '0' : '96%';\n\t}\n\n\treturn NavData[linkRouteName].activeRoute[activeRouteName].position[\n\t\tscreenSize\n\t];\n};\n\nexport default function SiteNavigationItem({ activeRoute, isActive, route }) {\n\tconst { desktop, mobile } = useBreakpoint();\n\tconst linkRoute = route === '/' ? 'home' : route.substring(1);\n\tconst currentRoute =\n\t\tactiveRoute === '/' ? 'home' : activeRoute.substring(1);\n\tconst isErrorPage = linkRoute === '_error' && currentRoute === '_error';\n\tconst { colors } = useContext(ThemeContext);\n\tconst position = getPosition(linkRoute, currentRoute, mobile);\n\tconst iconSize = desktop ? 28 : 22;\n\n\tif (linkRoute === '_error' && !isErrorPage) {\n\t\treturn null;\n\t}\n\n\tconst getIcon = (route) => {\n\t\tswitch (route) {\n\t\t\tcase '/':\n\t\t\t\treturn <FaHome size={iconSize} />;\n\t\t\tcase '/about':\n\t\t\t\treturn <FaUser size={iconSize - 3} />;\n\t\t\tcase '/contact':\n\t\t\t\treturn <FaEnvelope size={iconSize} />;\n\t\t\tcase '/_error':\n\t\t\t\treturn <FaExclamationCircle size={iconSize} />;\n\t\t\tcase '/portfolio':\n\t\t\t\treturn <FaBriefcase size={iconSize} />;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn (\n\t\t<NavListItem\n\t\t\tbackgroundColor={isErrorPage ? colors.error : colors[linkRoute]}\n\t\t\tisActive={isActive}\n\t\t\tposition={position}\n\t\t\tdata-desktop={desktop}\n\t\t>\n\t\t\t<Link key={route} href={route} as={route} passHref>\n\t\t\t\t<NavLink>{getIcon(route)}</NavLink>\n\t\t\t</Link>\n\t\t</NavListItem>\n\t);\n}\n\nSiteNavigationItem.propTypes = {\n\tactiveRoute: PropTypes.string,\n\tisActive: PropTypes.bool,\n\troute: PropTypes.string\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider, createGlobalStyle, css } from 'styled-components';\n\nconst theme = {\n\tbreakpoints: {\n\t\tdesktop: { minWidth: 875 },\n\t\tmobile: { maxWidth: 874 }\n\t},\n\tcolors: {\n\t\tcontact: '#FF1493',\n\t\tabout: '#00BFFF',\n\t\tportfolio: '#ffe900',\n\t\thome: '#836fff',\n\t\terror: 'red',\n\t\tsuccess: '#22D900',\n\t\tmidPurple: '#cbc2fd',\n\t\tlightPurple: '#ebe8f3'\n\t},\n\tfontStacks: {\n\t\tmontserrat: \"'Montserrat', 'helvetica-neue', 'arial', sans-serif\"\n\t}\n};\n\nexport const GlobalStyles = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n  \n  *,\n  *::after,\n  *::before {\n    box-sizing: inherit;\n  }\n\n\n  body {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    margin: 0 0;\n    font-size: 17px;\n    line-height: 1.4;\n    font-family: ${theme.fontStacks.montserrat};\n  }\n  \n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-family: ${theme.fontStacks.montserrat};\n    font-weight: 900;\n    text-transform: uppercase\n  }\n\n  h1 {\n    font-size: 34px;\n    border-bottom: 3px solid black;\n  }\n\n  h2 {\n    font-size: 24px;\n    border-bottom: 2px solid black;\n  }\n\n  h3 {\n    font-size: 17px;\n  }\n\n  h4 {\n    font-size: 16px;\n  }\n\n  a {\n  }\n  \n  p {\n    font-size: 17px;\n  }\n\n  input,\n  textarea {\n    font: 18px/24px 'Montserrat';\n    border: none;\n    border-left: 5px solid ${theme.colors.contact};\n    outline: none;\n    background: white;\n    color: black;\n\n    &:focus {\n      outline: none;\n      background: black;\n      color: white;\n      border: 5px solid ${theme.colors.contact};\n    }\n  }\n\n  input {\n    width: 100%;\n    height: 55px;\n    padding: 10px;\n  }\n  \n  textarea {\n    display: block;\n    width: 100%;\n    height: 100px;\n    padding: 10px;\n    resize: vertical;\n\n    + span {\n      left: 0;\n      height: 100px;\n    }\n  }\n\n  button {\n    width: 50%;\n    margin: 0 auto;\n    padding: 10px;\n    background: ${theme.colors.contact};\n    color: black;\n    border: 5px solid ${theme.colors.contact};\n    font: 20px/24px ${theme.fontStacks.montserrat};\n    cursor: pointer;\n    transition: .3s all ease-in-out;\n\n    &:disabled {\n      opacity: .5;\n\n      &:hover {\n        background: black;\n\t\t\t\tcolor: white;\n        cursor: not-allowed;\n      }\n    }\n  }\n`;\n\n// Use a more modern inheritance-based box-sizing setting:\n// https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\nexport const globalBorderBox = css`\n\thtml {\n\t\tbox-sizing: border-box;\n\t}\n\n\t*,\n\t*:before,\n\t*:after {\n\t\tbox-sizing: inherit;\n\t}\n`;\n\nexport const globalReset = css`\n\thtml,\n\tbody,\n\th1,\n\th2,\n\th3,\n\th4,\n\th5,\n\th6,\n\tp,\n\tul,\n\tol,\n\tli,\n\tform,\n\tfieldset,\n\tlabel {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n`;\n\nfunction camelToHyphen(str) {\n\treturn str\n\t\t.replace(/[A-Z]/g, function(m) {\n\t\t\treturn '-' + m.toLowerCase();\n\t\t})\n\t\t.toLowerCase();\n}\n\n// Simple cache for the expensive part of `objectToMediaQuery` below.\nconst mediaQueryCache = new Map();\n\nexport function objectToMediaQuery(query) {\n\tif (typeof query === 'string' || !query) {\n\t\treturn query;\n\t}\n\tconst cacheKey = JSON.stringify(query);\n\tlet string = mediaQueryCache.get(cacheKey);\n\tif (string == null) {\n\t\tstring = Object.keys(query)\n\t\t\t.map((name) => {\n\t\t\t\tconst feature = camelToHyphen(name);\n\t\t\t\tlet value = query[name];\n\t\t\t\tif (typeof value === 'boolean') {\n\t\t\t\t\treturn value ? feature : `not ${feature}`;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\ttypeof value === 'number' &&\n\t\t\t\t\t/[height|width]$/.test(feature)\n\t\t\t\t) {\n\t\t\t\t\tvalue = `${value}px`;\n\t\t\t\t}\n\t\t\t\treturn `(${feature}: ${value})`;\n\t\t\t})\n\t\t\t.join(' and ');\n\n\t\tmediaQueryCache.set(cacheKey, string);\n\t}\n\treturn string;\n}\n\nexport function getDesktopMediaQuery() {\n\tconst { mobile, desktop } = theme.breakpoints;\n\tif (desktop) {\n\t\treturn objectToMediaQuery(desktop);\n\t}\n\t// Invert the mobile media query with `not`.\n\treturn `not all and ${objectToMediaQuery(mobile)}`;\n}\n\n/**\n * Media query template that renders only on mobile sizes.\n * Use like:\n *   ${mobile`color: black;`}\n */\nexport function mobile(...args) {\n\treturn css`\n\t\t@media ${(props) =>\n\t\t\t\tobjectToMediaQuery(props.theme.breakpoints.mobile)} {\n\t\t\t${css(...args)};\n\t\t}\n\t`;\n}\n\n/**\n * Media query template that renders only on desktop sizes.\n * Use like:\n *   ${desktop`color: black;`}\n */\nexport function desktop(...args) {\n\treturn css`\n\t\t@media ${(props) => getDesktopMediaQuery(props.theme)} {\n\t\t\t${css(...args)};\n\t\t}\n\t`;\n}\n\nexport function useBreakpoint(query) {\n\tconst mobileQuery = theme.breakpoints.mobile || null;\n\n\tif (!mobileQuery) {\n\t\tthrow new Error('You must define a `breakpoints.mobile` media query.');\n\t}\n\n\t// Defining a specific `desktop` breakpoint is optional; by default it will be\n\t// the inverse of `mobile`.\n\tconst desktopQuery = theme.breakpoints.desktop || null;\n\n\tif (typeof query === 'string' && theme.breakpoints[query] != null) {\n\t\tquery = theme.breakpoints[query];\n\t}\n\n\tconst desktop = useMedia(desktopQuery, true);\n\tconst mobile = useMedia(mobileQuery, !desktop);\n\tconst matches = useMedia(query, false);\n\n\treturn {\n\t\tmobile,\n\t\tdesktop,\n\t\tmatches\n\t};\n}\n\nexport function useMedia(rawQuery, defaultState = null) {\n\tconst [state, setState] = useState(defaultState);\n\tconst query = objectToMediaQuery(rawQuery);\n\n\tuseEffect(() => {\n\t\tif (query) {\n\t\t\tlet mounted = true;\n\t\t\tconst mql = window.matchMedia(query);\n\t\t\tconst onChange = () => {\n\t\t\t\tif (!mounted) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetState(mql.matches);\n\t\t\t};\n\t\t\tmql.addListener(onChange);\n\t\t\tsetState(mql.matches);\n\n\t\t\treturn () => {\n\t\t\t\tmounted = false;\n\t\t\t\tmql.removeListener(onChange);\n\t\t\t};\n\t\t}\n\t}, [defaultState, query]);\n\n\treturn query ? state : defaultState;\n}\n\nexport function Theme({ children }) {\n\treturn <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n\nTheme.propTypes = {\n\tchildren: PropTypes.node\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AAGA;AAAA;AAIA;AAAA;AAQA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AANA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAZA;AAcA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9HA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAfA;AAoBA;AAuHA;AACA;AAAA;AAYA;AACA;AAoBA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAKA;AACA;AACA;AAAA;AAKA;AAEA;;;;;;AAKA;AACA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;;;;A","sourceRoot":""}